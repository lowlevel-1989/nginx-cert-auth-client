server {
  listen 443   ssl;
  server_name  cert.example.es;

  access_log   /var/log/nginx/cert_example_access.log main;
  error_log    /var/log/nginx/cert_example_error.log  notice;

  ssl_protocols       TLSv1.2;
  ssl_ciphers         ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;

  ssl_certificate     /etc/ssl/letsencrypt/example.es/fullchain.pem;
  ssl_certificate_key /etc/ssl/letsencrypt/example.es/privkey.pem;

  # lista de certificados utilizadas para validar a los cliente
  # esta lista se envia a los clientes, si no desea envia la lista
  # a los clientes utilizar el ssl_trusted_certificate en su lugar
  ssl_client_certificate  /etc/ssl/example.es/clients/clients.pem;
  ssl_verify_client optional;
  ssl_verify_depth         3;

  # ssl_trusted_certificate /etc/ssl/example.es/clients.pem;

  location / {

    set $is_err 1;
    set $x_callback "";

    set_unescape_uri $x_callback $arg_back;

    set $secret 'thisisverysecretstuff';
    set_hmac_sha256   $signature $secret $x_callback;
    set_encode_base64 $signature;
    set_escape_uri    $signature;

    # Validamos que no se modificaron los datos
    if ($signature = $arg_key) {
      set $is_err 0;
    }

    if ($is_err) {
      return 400;
    }

    # 1. Se pasa el cerfiticado por una cookie de session llamada cert
    # 2. Se pasa la cookie 1092837465 con valor a 1, para indicar que somos el servicio
    # 3. Se hace una redireccion 302 al callback
    add_header Set-Cookie "cert=$ssl_client_escaped_cert; Domain=.example.es; Path=/";
    add_header Set-Cookie "1092837465=1; Domain=.example.es; Path=/";
    return 302 $x_callback;
  }
}
